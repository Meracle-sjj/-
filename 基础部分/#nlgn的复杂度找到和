#merge sort
def merge(inputList,start,middle,end):
    n_L = middle - start + 1
    n_R = end - middle
    L = [0] * n_L
    R = [0] * n_R
    for i in range(n_L):
        L[i] = inputList[start+i]
    for j in range(n_R):
        R[j] = inputList[middle+1+j]
    i = 0
    j = 0 
    key = start
    while i < n_L and j < n_R:
        if L[i] <= R[j]:
            inputList[key] = L[i]
            i += 1
        else:
            inputList[key] = R[j]
            j += 1
        key += 1
    while i < n_L:
        inputList[key] = L[i]
        i += 1
        key += 1
    while j < n_R:
        inputList[key] = R[j]
        j += 1
        key += 1
def merge_sort(inputList,start,end):
    if start >= end:
        return
    middle = (start + end)//2
    merge_sort(inputList,start,middle)
    merge_sort(inputList,middle+1,end)
    merge(inputList,start,middle,end)
import random
random_list20 = list(random.sample(range(1, 51), 20))
print("原数列为：",random_list20)
merge_sort(random_list20,0,len(random_list20)-1)
print("sort_merge后的数列为:",random_list20)

def sumCheck(arrangedList,targetSum):
    head = 0
    tail = len(arrangedList) - 1
    while head < tail:
        if arrangedList[head] + arrangedList[tail] == targetSum:
            print("已找到，为",arrangedList[head],"+",arrangedList[tail])
            return True 
        elif targetSum < (arrangedList[head] + arrangedList[tail]):
            tail -= 1
        else:
            head += 1   
    return False


while 1:
    a = int(input("请输入你需要检查的和:"))
    if sumCheck(random_list20,a) == 1:
        break
    else:
        print("重新输入一个试试吧")
